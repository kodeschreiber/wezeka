#!/bin/bash

# _get_resource <resource>

set -a
source <(wzk-sekt -e -q -p 'f_' -t 'entry' "${CONFIG}" "default_factor_values")
source <(wzk-sekt -e -q -p 'f_' -t 'entry' "${CONFIG}" "factor")
cat <<EOF >>"${CONFIG}"
[entry ${1}_defaults]
env=${f_env} ${1}
exec=${1}
EOF
source <(wzk-sekt -e -q -p 'f_' -t 'entry' "${CONFIG}" "${1}_defaults")
ENV="${f_env}"
source <(wzk-sekt -e -q -p 'f_' -t 'entry' "${CONFIG}" "${1}")
set +a

# test ! -z "${f_url}"
# @einz "No url defined for ${1}"
test ! -z "${f_prefix}"
@einz "No prefix provided for ${1}"
test ! -z "${f_exec}"
@einz "No script sections specified for ${1}"

f_moddir="${FACTDIR}/${1}"
f_meta="${f_moddir}/meta"
f_cache="${f_moddir}/cache"
f_module="${f_moddir}/module"
f_frozen="${f_moddir}/${1}_module.tar.gz"
f_rmodule="${RFACTDIR}/${1}/module"
f_script_file="${TMPDIR}/${1}.sh"
f_entry_conf="${TMPDIR}/${1}.conf"

if [ -z "${f_url}" ]; then  # For execute-only situations
  f_module="${f_prefix}"
fi

cat <<EOF >"${f_entry_conf}"
[env default_factor_env]
PREFIX_CACHE="${f_cache}"
PREFIX_BUILD="${f_prefix}"
GIT_ROOT="${GIT_ROOT}"
EOF
