#!/bin/bash

_usage(){
cat <<'EOF'
Uasge: mkblk [-i size|-p size] [-f format] [-b block-size] output-file

Sizing:
  You can denote the size bytes
  Using the `-i` flag means that the size should be applied to the output image
  Using the `-p` flag means that the size should be applied to the inner partition
  The `-i` and `-p` flags cannot be used together
  
Formatting:
  You may select a format for the partition within the block. Options are:
  - ext4 (default)
  - ext3
  - ntfs
  - vfat
  (More to come)
  
Block size:
  You can denote the size in bytes. The default is 4194304
EOF
}

posargs=''
imgsize=''
partsize=''
format='ext4'
blocksize=4194304
outfile=''

wcis=256
wcir=4096
# reser='0.05'

while [ $# -gt 0 ]; do
  case "${1}" in
    -i) imgsize="${2}"; ;;
    -p) partsize="${2}"; ;;
    -f) format="${2}"; ;;
    -b) blocksize="${2}"; ;;
    *)  outfile="${1}"; ;;
  esac
  shift; shift
done

if [ ! -z "${imgsize}" -a ! -z "${partsize}" ]; then
  echo "You must only define either an image or partition size, not both" >&2
  exit 2
fi

if [ -z "${imgsize}" -a -z "${partsize}" ]; then
  echo "You must define an image or partition size" >&2
  _usage >&2
  exit 3
fi

if [ -z "${outfile}" ]; then
  echo "You must define an output file" >&2
  _usage >&2
  exit 2
fi

set -e

if [ ! -z "${partsize}" ]; then
  tmpval=$(echo "$partsize * ( 1 - ($wcis/$wcir)) " | bc -l)
  imgsize=$(echo "${partsize}+(${partsize}-${tmpval})" | bc)
fi

pcount=$(echo "${imgsize}/4194304" | bc)

dd if=/dev/zero of="${outfile}" bs=4194304 count="${pcount}"
echo 'y' | mkfs.$format "${outfile}"
