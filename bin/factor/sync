#!/bin/bash

echo -ne "${LVLBAR} ${ORANGE}[${GREEN}=------${ORANGE}] Cleaning '${1}'${NONE}"
rm -rf "${f_cache}"
mkdir -p "${f_cache}"

(
if [ "${f_freeze}" == "true" ]; then
  if [ ! -f "${f_frozen}" -a ! -d "${f_module}" ]; then
    git clone "${f_url}" -b "${f_tag}" "${f_module}"
    @einz "Could not pull the module ${1}"
  fi

  if [ ! -f "${f_frozen}" ]; then
    (
      cd "${f_moddir}"
      tar zcvf "${f_frozen}" module
    )
    @einz "Unable to freeze repository"
  fi

  if [ ! -d "${f_module}" ]; then
    (
      cd "${f_moddir}"
      tar zxvf "${f_frozen}"
    )
    @einz "Unable to thaw repository"
  fi
else
  if [ ! -z "${f_url}" -a ! -d "${f_module}" ]; then
    git clone "${f_url}" -b "${f_tag}" "${f_module}"
    @einz "Could not pull the module ${1}"
  fi
fi
) | chaser "${LVLBAR} ${ORANGE}[${GREEN}==-----${ORANGE}] Checking module for '${1}'${NONE}"

pushd "${f_module}" >/dev/null
(
test "${GIT_ROOT}" != "$(git rev-parse --show-toplevel)"
@einz "Refusing to build; target git directory is the parent not the submodule: '${1}'"

if [ "${f_freeze}" != true ]; then
  git fetch --all >/dev/null
  git checkout "${f_tag}" 2>/dev/null
fi

git reset --hard "${f_tag}" >/dev/null
git clean -xfdf
) | chaser "${LVLBAR} ${ORANGE}[${GREEN}===----${ORANGE}] Cleaning module for '${1}'${NONE}"
popd >/dev/null
