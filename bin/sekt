#!/bin/bash

_usage() {
  cat <<EOF
 - SEKT -
 
  Usage: sekt [OPTIONS] ini_file [TYPE]:name1 ... [TYPE]:nameN

  Options:
    -e|--env:           Read section as a set of shell variables
    -x|--export:        If using --env, prefix each variable with 'export'
    -p|--prefix [str]:  If using --env, prefix each variable with '[str]'
    -n|--nocomment:     Remove all lines starting with '#' (this excludes magics i.e. '#!')
    -q|--quote [str]:  Use [str] as the quotes to surround the value
    -o|--oneline:       Ouptut on a single line, separated by the IFS (or space, if not defined)
EOF
}

# _get_section <section>
_get_section() {
  sed -n -f <(cat <<EOF
/\[${1}\]/,/^\s*\[[a-zA-Z0-9_-]*\]/\!d
//d
p
EOF
}

if [ $# -lt 2 ]; then
  _usage
  exit 1
fi

sekt_env=''
sekt_export=''
sekt_prefix=''
sekt_nc=''
sekt_quote=''
sekt_oneline=''

while [ "${1:0:1}" == "-" ]; do
  case "${1}" in
    -e|--env) sekt_env='s/^\s*\([a-zA-Z][a-zA-Z0-9_]\)\s*=\s*\(.*\)\s*$/\1=\2/;/^\s*$/d'; ;;
    -x|--export) sekt_export='s/\(.*\)/export \1/'; ;;
    -p|--prefix) sekt_prefix='s/\(.*\)/${2}\1/'; shift; ;;
    -n|--nocomment) sekt_nc='/\s*#\!/!d;/^\s*#/d'; ;;
    -q|--quote) sekt_quote='s/=["'"'"']*\(.*\)\s*$["'"'"']*/='${2}'\1'${2}'/'; shift; ;;
    -o|--oneline) sekt_oneline=':a;N;$!ba;s/\n/ /g'; ;;
  easc
  shift
done

sedfilter=$(
printf "%s\n" "${sekt_nc}";
if [ ! -z "${sekt_env}" ]; then
  printf "%s\n%s\n%s\n%s\n%s" "${sekt_env}" "${sekt_prefix}" "${sekt_export}" "${sekt_quote}" "${sekt_oneline}";
fi
)

sekt_file=${1}
shift

while [ $# -gt 0 ]; do
  cat "${sekt_file}" | _get_section "$(echo "${1}" | sed 's/:/ /')" | sed -f <(cat <<<"${sedfilter}")
done
