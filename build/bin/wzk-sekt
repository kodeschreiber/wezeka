#!/bin/bash

_usage(){
cat <<'EOF'
- SEKT -

 Usage: sekt [OPTIONS] ini_file name1 ... nameN

 Options:
   -e|--env:           Read section as a set of shell variables
   -p|--prefix [str]:  If using --env, prefix each variable with '[str]'
   -n|--nocomment:     Remove all lines starting with '#' (this excludes magics i.e. '#!')
   -q|--quote:  Ensure quotes surround the value
   -t|--type [str]: Specify a type prefix i.e. [type name]
EOF
}

if [ $# -lt 2 ]; then
  _usage
  exit 1
fi

sekt_env=''
sekt_prefix=''
sekt_nc=''
sekt_safe=''
sekt_type=''

while [ "${1:0:1}" == "-" ]; do
  case "${1}" in
    -e|--env) sekt_env='true'; ;;
    -p|--prefix) sekt_prefix="${2}"; shift; ;;
    -n|--nocomment) sekt_nc='true'; ;;
    -q|--quote) sekt_safe='true'; ;;
    -t|--type) sekt_type="${2}"; shift; ;;
  esac
  shift
done

sekt_file=${1}
shift

while [ $# -gt 0 ]; do
  sekt_name="${1}"
  if [ ! -z "${sekt_type}" ]; then
    sekt_name="${sekt_type} ${sekt_name}"
  fi
  awk -v name="${sekt_name}" -v env="${sekt_env}" \
      -v safe="${sekt_safe}" -v norem="${sekt_nc}" \
      -v prefix="${sekt_prefix}" -f <(cat <<"EOF"
($0~"\\["name"\\]"),($0!~"\\["name"\\]")&&/^\s*\[[a-zA-Z0-9 _-]*\]/ {
  if($0~"\\["name"\\]" || /^\s*\[[a-zA-Z0-9 _-]*\]/) { next; }
  if(norem == "true" && $0~/^\s*#[^\!]/) { next; }
  if(env == "true") {
    if($0~/^\s*#[^\!]/ || $0~/^[ \t]*$/) { next; }
    gsub(/^[[:space:]]*/,"",$0); gsub(/[[:space:]]*$/,"",$0)
    if(safe == "true" && $0!~/=['"]/) {
      split($0, parts, "=")
      $0=parts[1] "='" parts[2] "'"
    }
  }
  if(length(prefix) != 0) { $0=prefix $0; }
  print $0
}
EOF
) <"${sekt_file}"
  shift
done
